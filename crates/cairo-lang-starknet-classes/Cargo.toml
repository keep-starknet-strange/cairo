[package]
name = "cairo-lang-starknet-classes"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "Starknet definitions for contract classes."

[features]
default = []
scale-info = ["dep:scale-info", "cairo-lang-utils/scale-info", "cairo-lang-casm/scale-info"]

[dependencies]
cairo-felt.workspace = true
cairo-lang-casm = { path = "../cairo-lang-casm", version = "2.6.0-rc.0", default-features = true, features = ["serde"] }
cairo-lang-sierra = { path = "../cairo-lang-sierra", version = "2.6.0-rc.0" }
cairo-lang-sierra-to-casm = { path = "../cairo-lang-sierra-to-casm", version = "2.6.0-rc.0" }
cairo-lang-utils = { path = "../cairo-lang-utils", version = "2.6.0-rc.0" }
parity-scale-codec = { workspace = true }
convert_case.workspace = true
itertools = { workspace = true, default-features = true }
num-bigint = { workspace = true, default-features = true }
num-integer.workspace = true
num-traits = { workspace = true, default-features = true }
once_cell.workspace = true
serde = { workspace = true, default-features = true }
serde_json.workspace = true
sha3.workspace = true
smol_str.workspace = true
starknet-crypto.workspace = true
thiserror.workspace = true

# Optional deps
scale-info = { workspace = true, optional = true }

[dev-dependencies]
cairo-lang-sierra-generator = { path = "../cairo-lang-sierra-generator" }
cairo-lang-test-utils = { path = "../cairo-lang-test-utils", features = ["testing"] }
env_logger.workspace = true
indoc.workspace = true
pretty_assertions.workspace = true
test-case.workspace = true
test-log.workspace = true
